name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Adjust this if your main branch has a different name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: |
        cd infoSec/grid6.0/backend/api-inventory
        npm install

    - name: Run tests
      run: |
        cd infoSec/grid6.0/backend/api-inventory
        npm run test

    - name: Build the Docker image
      run: |
        cd infoSec/grid6.0/backend/api-inventory
        docker build -t your-dockerhub-username/your-image-name:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Push the Docker image
      run: |
        cd infoSec/grid6.0/backend/api-inventory
        docker push your-dockerhub-username/your-image-name:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd /path/to/your/app  # Adjust this to the actual path on your EC2 instance
          docker-compose down    # Stops existing containers
          docker-compose pull    # Pulls the latest image from Docker Hub
          docker-compose up -d   # Starts the containers in detached mode
