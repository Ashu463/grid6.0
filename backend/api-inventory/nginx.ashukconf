# Define rate limit zones
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
server {
    listen 80;
    server_name ashuk.ddns.net;
    return 301 https://$host$request_uri;  # Redirect all HTTP requests to HTTPS
}

server {
    listen 443 ssl;
    server_name ashuk.ddns.net;

    # SSL Certificate configuration
    ssl_certificate /etc/letsencrypt/live/ashuk.ddns.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ashuk.ddns.net/privkey.pem;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers (optional but recommended)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # Root directory and index file
    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    
    # rate limiting auth endpoints
    location = /auth/register {
    limit_req zone=auth_limit burst=5 nodelay;
    proxy_pass http://localhost:3000/products;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /auth/login {
    limit_req zone=auth_limit burst=5 nodelay;
    proxy_pass http://localhost:3000/products;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /auth/logout {
    limit_req zone=auth_limit burst=10 nodelay;
    proxy_pass http://localhost:3000/products;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /auth/reset-password {
    limit_req zone=auth_limit burst=3 nodelay;
    proxy_pass http://localhost:3000/products;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }

    # rate limiting products endpoints
    location = /products {
    limit_req zone=auth_limit burst=5 nodelay;
    proxy_pass http://localhost:3000/products;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }

    # rate limiting cart endpoints
    location = /cart {
    limit_req zone=auth_limit burst=3 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /cart/items {
    limit_req zone=auth_limit burst=5 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /cart/items/:itemId {
    limit_req zone=auth_limit burst=5 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }

    # rate limiting order endpoints
    location = /orders {
    limit_req zone=auth_limit burst=2 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /orders/:orderId {
    limit_req zone=auth_limit burst=2 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }

    # rate limiting payments endpoints
    location = /payments {
    limit_req zone=auth_limit burst=2 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }
    location = /payments/refund {
    limit_req zone=auth_limit burst=2 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }

     # rate limiting shipping endpoints
    location = /shipping/estimate {
    limit_req zone=auth_limit burst=3 nodelay;
    proxy_pass http://localhost:3000/auth/login;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Location block for serving content
    location / {
        proxy_pass http://localhost:3000;  # Adjust to match your backend service port inside Docker
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    # Logging (optional)
    access_log /var/log/nginx/ashuk.ddns.net.access.log;
}

