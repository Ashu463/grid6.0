// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String     @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  username  String
  password  String
}
model Product {
  id        String   @id 
  createdAt DateTime 
  updatedAt DateTime
  name      String
  description String
  price     Int
  imageUrl  String
}

model Cart {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  cartId    String
  productId String
  quantity  Int
  cart      Cart     @relation(fields: [cartId], references: [id])
}
model Order {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  items       String[]
  userId      String
  totalAmount Float
  status      String
}

model ShippingMethod {
  id        String   @id @default(uuid())
  name      String
  cost      Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Shipping {
  id            String   @id @default(uuid())
  orderId       String
  userId        String
  amount        Float
  paymentMethod String
  status        String
  estimatedArrival DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Payment {
  id            String   @id @default(uuid())
  orderId       String
  userId        String
  amount        Float
  paymentMethod String
  status        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Refund {
  id        String   @id @default(uuid())
  paymentId String
  amount    Float
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

